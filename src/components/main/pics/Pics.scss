.Pics {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	gap: 30px;
	width: 100%;
	height: 100vh;
	padding: 100px;
	background: #fff;
	.box {
		position: relative;
		width: 300px;
		height: 300px;
		border: 1px solid #333;
		&.box1 {
			&::before,
			&::after,
			span {
				position: absolute;
				top: 50%;
				right: 50px;
				content: '';
				//부모에 display:flex 속성이 있거나 해당 요소가 position:absolute 속성이 있으면 자동으로 block속성 갖게됨
				//display: block;
				width: 100px;
				height: 1px;
				background-color: #333;
				transform-origin: right center;
				transition-property: opacity, transform;
				transition-duration: 0.5s;
				opacity: 0;
			}
			&::before {
				transform: rotate(145deg);
				transition-delay: 0.7s;
			}
			&::after {
				transform: rotate(-145deg);
				transition-delay: 0.3s;
			}
			span {
				width: 0px;
				transition-property: opacity, width;
				transition-delay: 0s;
			}
			&:hover {
				&::before,
				&::after,
				span {
					opacity: 1;
				}
				&::before {
					transform: rotate(45deg);
					transition-delay: 0s;
				}
				&::after {
					transform: rotate(-45deg);
					transition-delay: 0.3s;
				}
				span {
					width: 150px;
					transition-delay: 0.7s;
				}
			}
		}
	}
}

// 처음 호버시 동작
// before 회전(delay: 0s) -> after 회전(delay: 0.3s) -> span 선 그어지기(delay: 0.7s)

// 호버 아웃시 동작
// before 회전아웃 -> after 회전아웃 -> span 아웃 ==> 이렇게 동작됨

// 하지만 원하는 모션은 반대
// span 아웃 -> after 회전아웃 -> before 회전아웃

// ==> 호버 인과 호버아웃의 딜레이값을 반대로 입력해야함
// :hover에 설정하는 delay값은 (hover in될때 적용됨)
// 원래 값에(:hover이전) 설정하는 delay값은 (hover out될때 적용됨)
